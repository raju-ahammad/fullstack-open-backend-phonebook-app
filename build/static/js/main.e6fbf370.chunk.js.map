{"version":3,"sources":["components/Filter.jsx","components/Notification.jsx","components/PersonForm.jsx","components/Persons.jsx","services/persons.js","App.js","index.js"],"names":["Filter","props","value","onChange","Notification","notification","className","type","message","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","Persons","persons","deletePerson","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","console","log","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6fbf370.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n  return (\r\n    <input\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n  />\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification     ","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: \r\n        <input\r\n          value={props.newName}\r\n          onChange={props.handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input \r\n          value={props.newNumber}\r\n          onChange={props.handleNumberChange}          \r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return (\r\n    persons.map(person=>\r\n      <p key={person.id}>\r\n        {person.name} {person.number} \r\n        <button onClick={() => deletePerson(person.id)}>delete</button>\r\n      </p>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = 'https://nodephonebookapp.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setStringFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }  \n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }  \n\n  const handleFilterStringChange = (event) => {\n    setStringFilter(event.target.value)\n  } \n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}`)\n    if (ok) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} had already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personService.update(existing.id, {\n          name: existing.name,\n          number:newNumber\n        }).then(retunedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : retunedPerson))\n          notifyWith(`Changed number of  ${existing.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber   \n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        notifyWith(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        // p채채set k채siksi palvelimen palauttamaan virheilmoitusolioon n채in\n        console.log(error.response.data.error)\n        notifyWith(`${error.response.data.error} `, 'error')\n      })\n    }\n  }\n\n  const personsToShow = filterString.length === 0 ?\n    persons : \n    persons.filter(p => p.name.toLowerCase().includes(filterString.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      filter shown with: \n      <Filter\n        value={filterString}\n        onChange={handleFilterStringChange}\n      />\n\n      <h3>add a new</h3>\n      <PersonForm \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n     \n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}